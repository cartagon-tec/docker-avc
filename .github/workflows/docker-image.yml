name: Publicar imagen Docker

on:
  push:
    branches: [ main ]

env:
  # TODO: Cambiar por tu URI de repositorio
  # ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  IMAGE_TAG: ${{ github.run_number }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configura AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Construir, etiquetar y hacer push de la imagen Docker
      #env:
        # ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        
      run: |
        apt-get update
        sudo apt install awscli
        docker build -t ${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .
        docker push ${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
      

    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
           aws ecr get-login-password --region eu-west-3 | docker login --username AWS --password-stdin $ECR_REPOSITORY 
           docker rmi $(docker images -a -q)
           docker pull ${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
           docker stop test_server
           docker rm test_server
           docker run --detach --name test_server -p 80:5000 ${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
           
             
